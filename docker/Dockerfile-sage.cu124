FROM nvidia/cuda:12.4.1-cudnn-runtime-ubuntu22.04 AS base
# 非インタラクティブモードにする (入力待ちでブロックしなくなる)
ENV DEBIAN_FRONTEND=noninteractive
# .pycを作らないように
ENV PYTHONDONTWRITEBYTECODE 1
# バッファの無効化
ENV PYTHONUNBUFFERED 1
# rootのpython環境へのパス
ENV PYTHONPATH /usr/local/lib/python3.10/dist-packages
# torchvisionでpretrainedのモデルを保存する場所
ENV TORCH_HOME /app/.cache

WORKDIR /app

RUN apt update && \
    apt install -y \
    wget \
    bzip2 \
    build-essential \
    git \
    git-lfs \
    curl \
    ca-certificates \
    libsndfile1-dev \
    libgl1 \
    python3.10 \
    python3-pip 

# For SageMath (cf. https://sagemanifolds.obspm.fr/install_ubuntu.html)
RUN apt install -y \
    bc \
    binutils \
    bzip2 \
    ca-certificates \
    cliquer \
    cmake \
    curl \
    ecl \
    eclib-tools \
    fflas-ffpack \
    flintqs \
    g++ \
    gengetopt \
    gfan \
    gfortran \
    git \
    glpk-utils \
    gmp-ecm \
    lcalc \
    libatomic-ops-dev \
    libboost-dev \
    libbraiding-dev \
    libbrial-dev \
    libbrial-groebner-dev \
    libbz2-dev \
    libcdd-dev \
    libcdd-tools \
    libcliquer-dev \
    libcurl4-openssl-dev \
    libec-dev \
    libecm-dev \
    libffi-dev \
    libflint-arb-dev \
    libflint-dev \
    libfreetype6-dev \
    libgc-dev \
    libgd-dev \
    libgf2x-dev \
    libgiac-dev \
    libgivaro-dev \
    libglpk-dev \
    libgmp-dev \
    libgsl-dev \
    libhomfly-dev \
    libiml-dev \
    liblfunction-dev \
    liblrcalc-dev \
    liblzma-dev \
    libm4rie-dev \
    libmpc-dev \
    libmpfi-dev \
    libmpfr-dev \
    libncurses5-dev \
    libntl-dev \
    libopenblas-dev \
    libpari-dev \
    libpcre3-dev \
    libplanarity-dev \
    libppl-dev \
    libprimesieve-dev \
    libpython3-dev \
    libqhull-dev \
    libreadline-dev \
    librw-dev \
    libsingular4-dev \
    libsqlite3-dev \
    libssl-dev \
    libsuitesparse-dev \
    libsymmetrica2-dev \
    libz-dev \
    libzmq3-dev \
    libzn-poly-dev \
    m4 \
    make \
    nauty \
    openssl \
    palp \
    pari-doc \
    pari-elldata \
    pari-galdata \
    pari-galpol \
    pari-gp2c \
    pari-seadata \
    patch \
    perl \
    pkg-config \
    planarity \
    ppl-dev \
    python3-distutils \
    python3-venv \
    r-base-dev \
    r-cran-lattice \
    singular \
    sqlite3 \
    sympow \
    tachyon \
    tar \
    tox \
    xcas \
    xz-utils \
    texlive-latex-extra \
    texlive-xetex \
    latexmk \
    pandoc \
    dvipng

# ----------------------------------------------------------------
# create user
# ----------------------------------------------------------------
# UIDとGIDは外から与える
ARG USER_UID
ARG USER_GID

# コンテナ内でのユーザー名， グループ名
ARG USER_NAME=user
ARG GROUP_NAME=user

# グループが存在しなかったら，　適当なグループを作成
RUN if ! getent group $USER_GID >/dev/null; then \
    groupadd -g $USER_GID $GROUP_NAME; \
    fi

# ユーザーを作成
RUN useradd -m -u $USER_UID -g $USER_GID -s /bin/bash $USER_NAME

# 初期ユーザーの変更
USER $USER_NAME
ENV PATH /home/$USER_NAME/.local/bin:$PATH

# ----------------------------------------------------------------
# requiremtentsはtorchよりも更新されうるのでここでは入れない
RUN pip3 install --no-cache-dir -U pip setuptools wheel

# ----------------------------------------------------------------
FROM base AS torch-2.3.0

RUN pip3 install --no-cache-dir torch==2.3.0+cu121 torchvision==0.18.0+cu121 -f https://download.pytorch.org/whl/torch_stable.html 

COPY requirements.txt /app
RUN pip3 install --no-cache-dir -r requirements.txt

# COPY setup-sage.sh /app
# RUN bash setup-sage.sh  # does not run properly?